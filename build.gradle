buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
	}
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'provided-base'

version = '0.3.0'
group = 'net.alchim31.jme3'

sourceCompatibility = '1.6'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
	maven {
		url "http://updates.jmonkeyengine.org/maven"
	}
}

configurations {
	jstackalloc
}

dependencies {
	jstackalloc 'com.jme3-lib:stack-alloc:3.0.10-jme'
	jstackalloc 'asm:asm-all:3.1'
	compile 'java3d:vecmath:1.3.1'
	compile 'com.jme3-lib:stack-alloc:3.0.10-jme'
	provided ('com.jme3:jme3-jbullet:3.0.10') {
		exclude module: "jbullet"
	}
	testCompile 'org.lwjgl.lwjgl:lwjgl:2.9.1'
	testCompile 'org.lwjgl.lwjgl:lwjgl_util:2.9.1'
	testCompile 'org.swinglabs:swing-layout:1.0.3'
}

task jstackalloc(dependsOn: 'compileJava') << {
	//println sourceSets.main.output.classesDir
	ant.taskdef(name: 'instrument_stack', classname: 'cz.advel.stack.instrument.InstrumentationTask') {
		classpath {
			pathelement(path: configurations.jstackalloc.asPath)
			pathelement(path: configurations.compile.asPath)
			pathelement(location: sourceSets.main.output.classesDir)
		}
	}
	ant.instrument_stack(dest: sourceSets.main.output.classesDir, packageName:"com.bulletphysics", isolated:"true") {
		fileset(dir: sourceSets.main.output.classesDir, includes:"**/*.class")
	}
}

classes.dependsOn jstackalloc

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}
task javadocJar (type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

def pomConfig = {
	url 'https://github.com/davidB/jmbullet'
	inceptionYear '2014'

	scm {
	  url 'https://github.com/davidB/jmbullet'
	}

	licenses {
	  license {
		name 'ZLIB license'
		url 'http://opensource.org/licenses/zlib-license.php'
		distribution 'repo'
	  }
	}

	developers {
	  developer {
		name 'David Bernard'
		id 'davidB'
	  }
	}
}


apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			pom.withXml {
				asNode().children().last() + pomConfig
			}
		}
	}
}

bintray {
	user = bintray_user
	key = bintray_api_key

	publications = ['maven'] //When uploading Maven-based publication files
	dryRun = false //Whether to run this as dry-run, without deploying
	publish = true //If version should be auto published after an upload
	pkg {
		repo = 'jme3stuff'
		name = project.name
		desc = "This is an other fork of jbullet"
		websiteUrl = "https://github.com/davidB/jmbullet"
		issueTrackerUrl = "https://github.com/davidB/jmbullet/issues"
		vcsUrl = "https://github.com/davidB/jmbullet.git"
		licenses = ['ZLIB']
		labels = ['jmonkeyengine', 'physics']
		publicDownloadNumbers = true
	}
}

